@model CobotWebApp.Models.View.IotViewModel.MoveJControlCommandRequestViewModel;

<div class="container py-3">
    <header>
        <div class="d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom">
            <div class="d-flex align-items-center link-body-emphasise">
                <i class="bi bi-robot me-2" style="font-size: 2em;"></i> <span class="fs-4">Cobot Digital Twin</span>
            </div>
            <partial name="_LoginPartial" />
        </div>
    </header>
    <main>
        @await Html.PartialAsync("_BreadCrumbPartial", Model.BreadCrumbPartialViewModelList)
        <div class="container">
            <div class="h2 pb-3">Move J Control Command Request</div>
            <form casp-controller="Iot" asp-action="MoveJControlCommandResponse" method="post">
                <div class="row g-3 pb-3">
                    <div class="col-sm-6">
                        <label asp-for="Acceleration" class="form-label">Acceleration</label>
                        <input asp-for="Acceleration" class="form-control" value="0.5">
                    </div>
                    <div class="col-sm-6">
                        <label asp-for="Velocity" class="form-label">Velocity</label>
                        <input asp-for="Velocity" class="form-control" value="0.5">
                    </div>
                    <div class="col-sm-6">
                        <label asp-for="BlendRadius" class="form-label">BlendRadius</label>
                        <input asp-for="BlendRadius" class="form-control" value="0">
                    </div>
      
                    <div class="col-sm-6">
                        <label asp-for="TimeS" class="form-label">Time S</label>
                        <input asp-for="TimeS" class="form-control" value="0">
                    </div>
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-text">Joint Position Model Array</span>
                            <textarea class="form-control" asp-for="JointPositionModelArray"></textarea>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <span class="w-100 btn btn-secondary btn-lg" data-bs-toggle="modal" data-bs-target="#jointPositionModal">Add Joint Position Model</span>
                    </div>
                    <div class="col-sm-6">
                        <button class="w-100 btn btn-danger btn-lg" type="submit">Execute</button>
                    </div>
                    <div class="col-sm-12">
                        <a class="w-100 btn btn-lg btn-primary" asp-controller="Iot" asp-action="Dashboard">Back</a>
                    </div>
                 </div>
            </form>
        </div>
    </main>
</div>
<div class="modal fade" id="jointPositionModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="jointPositionalModelForm">
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Joint Position Model</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="baseInput" class="col-form-label">Base</label>
                        <input type="text" id="baseInput" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="shoulderInput" class="col-form-label">Shoulder</label>
                        <input type="text" id="shoulderInput" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="elbowInput" class="col-form-label">Elbow</label>
                        <input type="text" id="elbowInput" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="wrist1Input" class="col-form-label">Wrist1</label>
                        <input type="text" id="wrist1Input" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="wrist2Input" class="col-form-label">Wrist2</label>
                        <input type="text" id="wrist2Input" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="wrist3Input" class="col-form-label">Wrist3</label>
                        <input type="text" id="wrist3Input" class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Append Joint Position Model</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section CSS{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        .bi {
            vertical-align: -.125em;
            fill: currentColor;
        }

        .icon-link > .bi {
            width: .75em;
            height: .75em;
        }
    </style>
    <svg xmlns="http://www.w3.org/2000/svg" class="d-none">
        <symbol id="aperture" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24">
            <circle cx="12" cy="12" r="10" />
            <path d="M14.31 8l5.74 9.94M9.69 8h11.48M7.38 12l5.74-9.94M9.69 16L3.95 6.06M14.31 16H2.83m13.79-4l-5.74 9.94" />
        </symbol>
        <symbol id="cart" viewBox="0 0 16 16">
            <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
        <symbol id="chevron-right" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
        </symbol>
        <symbol id="house-door-fill" viewBox="0 0 16 16">
            <path d="M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z" />
        </symbol>
    </svg>
}
@section Scripts{
    <script type="text/javascript">
        document.getElementById("jointPositionalModelForm").addEventListener("submit", function (event) {
            event.preventDefault();
            const jointPositionModelArrayTextArea = document.getElementById("JointPositionModelArray");
            const baseInput = document.getElementById("baseInput");
            const shoulderInput = document.getElementById("shoulderInput");
            const elbowInput = document.getElementById("elbowInput");
            const wrist1Input = document.getElementById("wrist1Input");
            const wrist2Input = document.getElementById("wrist2Input");
            const wrist3Input = document.getElementById("wrist3Input");

            var jointPositionModelArrayValue = jointPositionModelArrayTextArea.value;
            var baseValue = parseFloat(baseInput.value);
            var shoulderValue = parseFloat(shoulderInput.value);
            var elbowValue = parseFloat(elbowInput.value);
            var wrist1Value = parseFloat(wrist1Input.value);
            var wrist2Value = parseFloat(wrist2Input.value);
            var wrist3Value = parseFloat(wrist3Input.value);

            if (isNaN(baseValue)) {
                baseValue = 0.0;
            }
            if (isNaN(shoulderValue)) {
                shoulderValue = 0.0;
            }
            if (isNaN(elbowValue)) {
                elbowValue = 0.0;
            }
            if (isNaN(wrist1Value)) {
                wrist1Value = 0.0;
            }
            if (isNaN(wrist2Value)) {
                wrist2Value = 0.0;
            }
            if (isNaN(wrist3Value)) {
                wrist3Value = 0.0;
            }

            if (jointPositionModelArrayValue.trim() === '') {
                let jointPositionModelArray = [];
                const jointPositionModelObject = {
                    jointPositionModel: {
                        base: baseValue,
                        shoulder: shoulderValue,
                        elbow: elbowValue,
                        wrist1: wrist1Value,
                        wrist2: wrist2Value,
                        wrist3: wrist3Value,
                    }
                };
                jointPositionModelArray.push(jointPositionModelObject);
                jointPositionModelArrayTextArea.value = JSON.stringify(jointPositionModelArray, null, 2);
            }
            else {
                let jointPositionModelArray = JSON.parse(jointPositionModelArrayValue);
                const jointPositionModelObject = {
                    jointPositionModel: {
                        base: baseValue,
                        shoulder: shoulderValue,
                        elbow: elbowValue,
                        wrist1: wrist1Value,
                        wrist2: wrist2Value,
                        wrist3: wrist3Value,
                    }
                };
                jointPositionModelArray.push(jointPositionModelObject);
                jointPositionModelArrayTextArea.value = JSON.stringify(jointPositionModelArray, null, 2);
            }
        });
    </script>
}